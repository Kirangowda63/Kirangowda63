 #include <stdio.h>
 int G[10][10] = {
 { 0, 2, 8, 5 },
 { 2, 0, 3, 4 },
 { 8, 3, 0, 7 },
 { 5, 4, 7, 0 }
 };
 int visited[10], n, cost = 0;
 void tsp(int c)
 {
 int k, adj_vertex = 999;
 int min = 999;
 visited[c] = 1;
 printf("%d ", c + 1);
 for(k = 0; k < n; k++)
 {
 }
 if((G[c][k] != 0) && (visited[k] == 0))
 {
 }
 if(G[c][k] < min)
 {
 min = G[c][k];
 adj_vertex = k;
 }
 if(min != 999)
 {
cost = cost + min;
 }
 if (adj_vertex == 999)
 {
 }
 adj_vertex = 0;
 printf("%d", adj_vertex + 1);
 cost = cost + G[c][adj_vertex];
 return;
 tsp(adj_vertex);
 }
 int main()
 {
 int i, j;
 n = 5;
 for(i = 0; i < n; i++)
 {
 }
 visited[i] = 0;
 printf("Shortest Path: ");
 tsp(0);
 printf("\nMinimum Cost: ");
 printf("%d\n", cost);
 return 0;
 }
